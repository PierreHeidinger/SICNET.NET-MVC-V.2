@model entityModels.Cliente

@model entityModels.Cliente

@{
    ViewBag.Title = "Cliente_agregar";

    //Listado de departamentos
    var departamentos = (SelectList)ViewBag.departamentos;
    var distritos = (SelectList)ViewBag.lista;

    //Tipos de Documento
    var documentos = new List<SelectListItem>
    {
        new SelectListItem { Text="--SELECCIONE--" , Value = "0" },
        new SelectListItem { Text="DNI" , Value = "1" },
        new SelectListItem { Text="RUC" , Value = "2"}
    };
}

<script src="~/Scripts/jquery-1.6.3.min.js"></script>

<script type="text/javascript">



    $(document).ready(function () {

        $("#cbo_Departamentos").change(function () {

            $("#cbo_Provincias").empty();

            $.ajax({

                type: 'POST',

                url: '@Url.Action("getProvincia")',
                dataType: 'json',
                data: { id: $("#cbo_Departamentos").val() },
                success: function (Provincia) {

                    $.each(Provincia, function (i, Provincia) {

                        $("#cbo_Provincias").append('<option value="'
                            + Provincia.Id_Provincia + '">' +
                            Provincia.Provincia_descripcion + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Sub Categories : ' + ex);
                }
            });
            return false;
        })


        $("#cbo_Provincias").change(function () {

            $("#cbo_Distritos").empty();

            $.ajax({

                type: 'POST',

                url: '@Url.Action("getDistrito")',
                dataType: 'json',
                data: { id: $("#cbo_Provincias").val() },
                success: function (Distrito) {

                    $.each(Distrito, function (i, Distrito) {

                        $("#cbo_Distritos").append('<option value="'
                            + Distrito.Id_Distrito + '">' +
                            Distrito.Distrito_descripcion + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Sub Categories : ' + ex);
                }
            });
            return false;
        })

    });
</script>





<!-- Encabezado inicio-->

<div class="row">


    <div class="col-md-12">
        <button class="btn btn-primary" onclick="@Url.Action("Cliente_agregar")">INICIO</button>

        <button class="btn btn-primary">INICIO</button>







    </div>


</div>

<!-- Encabezado fin-->



<div class="row">
    <div class="col-md-12">
        <div class="card">

            <div class="card-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Html.LabelFor(model => model.tipo_documento)</label>
                                @Html.DropDownListFor(model => model.tipo_documento, documentos, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.tipo_documento, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Html.LabelFor(model => model.documento)</label>
                                @Html.EditorFor(model => model.documento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.documento, "", new { @class = "text-danger" })
                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Html.LabelFor(model => model.nombres)</label>
                                @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Html.LabelFor(model => model.apellido_paterno)</label>
                                @Html.EditorFor(model => model.apellido_paterno, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.apellido_paterno, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Html.LabelFor(model => model.apellido_materno)</label>
                                @Html.EditorFor(model => model.apellido_paterno, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.apellido_materno, "", new { @class = "text-danger" })

                            </div>
                        </div>

                    </div>

                        <div class="row">

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.fecha_nacimiento)</label>
                                    @Html.EditorFor(model => model.fecha_nacimiento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>@Html.LabelFor(model => model.fecha_registro)</label>
                                    @Html.EditorFor(model => model.fecha_registro, new { htmlAttributes = new { @class = "form-control", @readonly = false } })
                                    @Html.ValidationMessageFor(model => model.fecha_registro, "", new { @class = "text-danger" })

                                </div>
                            </div>

                        </div>

                                                <div class="row">
                                                    <label>VIVIENDA</label>
                                                    <hr />
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label>@Html.LabelFor(model => model.departamento)</label>
                                                            @Html.DropDownListFor(model => model.departamento, departamentos,"--DEPARTAMENTO--", new { @class = "form-control", id = "cbo_Departamentos" })
                                                            @Html.ValidationMessageFor(model => model.departamento, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label>@Html.LabelFor(model => model.provincia)</label>
                                                            @Html.DropDownListFor(model => model.provincia,
                                                            new SelectList(Enumerable.Empty<SelectListItem>(), "Id_Provincia", "Provincia_descripcion"), "--SELECCIONE--",
                                                            new { @class = "form-control", id = "cbo_Provincias" })
                                                            @Html.ValidationMessageFor(model => model.distrito, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label>@Html.LabelFor(model => model.distrito)</label>
                                                            @Html.DropDownListFor(model => model.distrito,
                                                            new SelectList(Enumerable.Empty<SelectListItem>(), "Id_Distrito", "Distrito_descripcion"), "--SELECCIONE--",
                                                            new { @class = "form-control", id = "cbo_Distritos" })
                                                            @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">

                                                    <div class="col-md-8">
                                                        <div class="form-group">
                                                            <label>@Html.LabelFor(model => model.direccion)</label>
                                                            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>

                                                </div>


                                                <input type="submit" value="GRABAR" class="btn btn-success" />

                }

            </div>
        </div>
    </div>
</div>



